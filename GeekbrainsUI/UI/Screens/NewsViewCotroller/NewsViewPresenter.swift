//
//  MessageViewPresenter.swift
//  GeekbrainsUI
//
//  Created by raskin-sa on 01/03/2020.
//  Copyright ¬© 2020 raskin-sa. All rights reserved.
//

import UIKit

protocol NewsViewPresenter {
    func viewDidLoad()
 
    //MARK: —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è TableViewController —Å —Å–µ–∫—Ü–∏—è–º–∏
    func numberOfRowsInSection(section: Int) -> Int
    func getCurrentNewsAtIndexSection(indexPath: IndexPath) -> NewsWithSectionsAny?
    func numberOfSections() -> Int
    func getSectionIndexTitles() -> [String]?
    func getTableviewCell(tableView: UITableView, indexPath: IndexPath) -> UITableViewCell
    func fetchMoreNews(tableView: UITableView, indexPaths: [IndexPath])
    func getRowHeight(tableView: UITableView, indexPath: IndexPath) -> CGFloat
}

/// —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ –¥–ª—è TableView, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–¥–∞–µ—Ç—Å—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º NewsViewPresenter
/// –ø—Ä–æ—Ç–æ–∫–æ–ª MoreButtonProtocol —Å–≤—è–∑—ã–≤–∞–µ—Ç –∫–ª–∞—Å—Å —Å —è—á–µ–π–∫–æ–π PostAndButton —á—Ç–æ–±—ã –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞–∂–∞—Ç—É—é –≤ –Ω–µ–π –∫–Ω–æ–ø–∫—É
class NewsViewPresenterImplementation: NewsViewPresenter, MoreButtonProtocol, ImageHeightDefined {

    private var vkAPI: VKAPi
    private weak var view: MessageView?  //–∫–ª–∞—Å—Å TableView, –≥–¥–µ –≤—Å–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
    var newsRepository = NewsRepository() // –º–∞—Å—Å–∏–≤ –Ω–æ–≤–æ—Å—Ç–µ–π, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∏–∑ –ë–î
    var newsResult = [NewsForViewController]() //–∑–∞–ø—Ä–æ—Å, —Å—á–∏—Ç–∞–Ω–Ω—ã–π —Å —Å–µ—Ä–≤–µ—Ä–∞ –í–ö (–µ–¥–∏–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
    
     var NewsWithSectionsAnyArray = [NewsWithSectionsAny]() //–Ω–æ–≤–æ—Å—Ç—å, —Ä–∞–∑–±–∏—Ç–∞—è –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ –Ω–∞ —Å–µ–∫—Ü–∏–∏
    private var sortedNewsResults = [Section<NewsWithSectionsAny>]() //–º–∞—Å—Å–∏–≤ —Å —Å–µ–∫—Ü–∏—è–º–∏, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –≤ TableView
    private var selfProfile: VKUser? //–ø—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    private var previousProfileID: String = ""
    
    var customRefreshControl = UIRefreshControl() //–¥–ª—è –¥–æ–∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤ –Ω–æ–≤–æ—Å—Ç–∏

    private var newsDB: NewsSource
    private var loginDB = LoginRepository()
    
    var isFetchingMoreNews = false  //–∑–∞–≥—Ä—É–∂–∞–µ–º –±–æ–ª–µ–µ —Å—Ç–∞—Ä—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–ª–∏ –Ω–µ—Ç
    var isProfileLoading = false //–∑–∞–≥—Ä—É–∂–∞–µ–º –ª–∏ –ø—Ä–æ—Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    var nextFrom: String? //—Å –∫–∞–∫–æ–π –æ—Ç–º–µ—Ç–∫–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏
    var freshestDateInt = 0
    
    var imageLoadQueue = DispatchQueue(label: "GeekbrainsUI.images.posts", attributes: .concurrent)
    
    init (newsDB: NewsSource, view: MessageView){
        self.view = view
        self.newsDB = newsDB
        vkAPI = VKAPi()
    }
    
    func viewDidLoad(){
        //–¥–æ–±–∞–≤–ª—è–µ–º –∫—Ä—É—Ç—è—â–µ–µ—Å—è –∫–æ–ª–µ—Å–∏–∫–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        addRefreshControl()
        //–ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        getProfileInformation()
        //–ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏
        getNewsFromApiAndDB()
    }
    
    
    /// –ó–∞–≥–ª—É—à–∫–∞ –±—É–¥—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –∫–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ–º –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –Ω–æ –Ω–æ–≤–æ—Å—Ç–∏ —Ö—Ä–∞–Ω–∏–º –≤ –ë–î –∏ –∑–∞–±–∏—Ä–∞–µ–º –∏–∑ –ë–î
    //MARK: üôÖ‚Äç‚ôÇÔ∏è –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    func getNewsFromDatabase(){
        //—Å–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –Ω–æ–≤–æ–ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        self.newsResult = self.newsDB.getAllNews()
        //—Ä–∞–∑–±–∏–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —á–∞—Å—Ç–∏, –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ —Å–µ–∫—Ü–∏–∏
        self.makeSections()
        //¬†—Å–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –≥—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å–µ–∫—Ü–∏—è–º
        self.sortForTableView()
    }//func getGroupsFromDatabase()
    
    func getNextFrom()-> String?{
        //–∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ nextFrom –∏–∑ Realm
        return nil
    }
    
    func getProfileInformation()
    {
        if webMode{
            //–ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Web
            imageLoadQueue.async {
                self.vkAPI.getLogin(token: Session.shared.token, loginId: Session.shared.userId){
                    result in
                    switch result{
                    case .success(let profile):
                        self.selfProfile = profile.first

                    case .failure(let error):
                        print("we got error in NewsPresenter -> vkAPI.getLogin: \(error)")
                    }//switch
                    
                }//vkAPI.getLogin completion
            }//imageLoadQueue.async
        } else {
            self.selfProfile = loginDB.getLogin()
        }//if webMode{
    }//func getProfileInformation()
    
    /// —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web
    /// –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ, –Ω–æ –∑–∞–≥–ª—É—à–∫–∏ —Ä–∞—Å—Å—Ç–∞–≤–ª–µ–Ω—ã
    /// - Parameter from: üôÖ‚Äç‚ôÇÔ∏è –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–∑–æ–≤–∞ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Å—Ç
    func  getNewsFromApiAndDB(from: String? = nil){
        if webMode{
            //–ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ nextFrom
            self.nextFrom = getNextFrom()
            
            //–ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Web
            imageLoadQueue.async {
                self.isFetchingMoreNews = true
                self.vkAPI.getNewsList(token: Session.shared.token, userId: Session.shared.userId, nextFrom: self.nextFrom, startTime: nil, version: Session.shared.version){  result in
                    switch result {
                    case .success(let webNews): //–º–∞—Å—Å–∏–≤ VKNews –∏–∑ Web
                     self.workWithNewsWebQuery(responseNews: webNews)
                    case .failure(let error):
                        print("we got error in getNewsfeed(): \(error)")
                    }//switch
                    self.isFetchingMoreNews = false
                }//completion
            }//imageLoadQueue.async
        }// if webMode{
        else
            //MARK: üôÖ‚Äç‚ôÇÔ∏è –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –ù–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–æ—Å—å
        {
            self.getNewsFromDatabase()
        }
    }//func  getGroupsFromApiAndDB()
    
    /// –§—É–Ω–∫—Ü–∏—è —Ä–∞–∑–±–∏–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –ø–æ–¥—Å—Ç—Ä—É–∫—Ç—É—Ä—ã-—Å–µ–∫—Ü–∏–∏
    func makeSections(){
        let localNewsResult = newsResult
        let newsResultcount = localNewsResult.count
             
        if newsResultcount > 0{
            //¬†—Ä–∞–∑–º–Ω–æ–∂–∞–µ–º –Ω–æ–≤–æ—Å—Ç—å –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ç–∏–ø–æ–≤ —è—á–µ–µ–∫
            for i in 0 ... newsResultcount - 1 { //—Ü–∏–∫–ª –ø–æ –∫–æ–ª-–≤—É –Ω–æ–≤–æ—Å—Ç–µ–π
                sliceAndAppendNews(newsToSlice: localNewsResult[i])
            }// for i
        }//if
    }//func makeSections(){
    
    /// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ tableView –∑–∞–ø–∏—Å—å –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    /// –í–Ω–∞—á–∞–ª–µ —É–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â—É—é –∑–∞–ø–∏—Å—å –æ –ø—Ä–æ—Ñ–∏–ª–µ, —Ç–∫ –≤ –∫–ª—é—á (–¥–∞—Ç–∞+–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)  –≤—Ö–æ–¥–∏—Ç —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞
    /// —ç—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å –≤—Å–µ–≥–¥–∞ –±—ã–ª –Ω–∞–≤–µ—Ä—Ö—É
    /// - Parameter profile: —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    func prepareProfileForView(profile: VKUser){
        if profile == nil {return}
        
        guard self.isProfileLoading == false else {return}
        
        self.isProfileLoading = true
        
        //—É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥. –∑–∞–ø–∏—Å—å –æ –ø—Ä–æ—Ñ–∏–ª–µ
  //      NewsWithSectionsAnyArray = NewsWithSectionsAnyArray.filter{$0.newsUniqID != self.previousProfileID}
        NewsWithSectionsAnyArray.removeAll(where: {$0.newsUniqID == self.previousProfileID})
        
        
        let unixTime = NSDate().timeIntervalSince1970 + 1000 //–∑–∞–ø–∞—Å ?
        let newsUniqID = String(Int(unixTime)) + "-" + profile.fullName
        
        NewsWithSectionsAnyArray.append(
            NewsWithSectionsAny(
                newsUniqID: newsUniqID,
                cellType: "SelfProfile",
                newsPart: StrSelfProfile(
                    id: profile.id,
                    avatarPath: profile.avatarPath,
                    lastName: profile.lastName,
                    firstName: profile.firstName,
                    fullName: profile.fullName
                )
            )
      
        )
        print(" üõë –≤—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –ø—Ä–æ—Ñ–∞–π–ª–µ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É. NewsUniqID = \(newsUniqID), –¥–∞—Ç–∞ = \(Date())")
        self.previousProfileID = newsUniqID
         self.isProfileLoading = false
    }
    
    /// —Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ –ø–æ —Å–µ–∫—Ü–∏—è–º –∏ —Å—Ç—Ä–æ–∫–∞–º
    func sortForTableView(){
        let groupedNews = Dictionary.init(grouping: NewsWithSectionsAnyArray){$0.newsUniqID }
        sortedNewsResults = groupedNews.map { Section(title: String($0.key), items: $0.value) }
        sortedNewsResults.sort {$0.title > $1.title}
    }
    
    /// –§—É–Ω–∫—Ü–∏–∏—è –±–µ—Ä–µ—Ç —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å –∏–∑ Web, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç
    /// - Parameter responseNews: —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ VKApi.getNewsFeed
    func workWithNewsWebQuery(responseNews: ResponseNews){
        
        //–ø—Ä–∏–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞ –∫ –≤–∏–¥—É, —Å –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —ç—Ç–æ–º –∫–ª–∞—Å—Å–µ
        self.newsDB.createNewsForView(sourceNews: responseNews)
        //—Å–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –Ω–æ–≤–æ–ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        self.newsResult = self.newsDB.getAllNews()
        //—Ä–∞–∑–±–∏–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —á–∞—Å—Ç–∏, –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ —Å–µ–∫—Ü–∏–∏
        self.makeSections()
        //–¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –ø—Ä–æ—Ñ–∏–ª–µ - –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—Å–µ–≥–¥–∞ –≤–≤–µ—Ä—Ö—É
        if !isProfileLoading{
        self.prepareProfileForView(profile: self.selfProfile!)
        }
        //¬†—Å–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –≥—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å–µ–∫—Ü–∏—è–º
        self.sortForTableView()
        //—Å–æ—Ö—Ä–∞–Ω—è–µ–º nextFrom
        self.nextFrom = responseNews.nextFrom
        
        //–ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        self.view?.updateTable()
      }

    
    /// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ—Ä—Ü–∏—é –±–æ–ª–µ–µ —Å—Ç–∞—Ä—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
    /// - Parameters:
    ///   - tableView: —Ç–∞–±–ª–∏—Ü–∞ –∏–∑ TableViewController
    ///   - indexPath: ¬†—Å—Ç—Ä–æ–∫–∞ indexPath
      func fetchMoreNews(tableView: UITableView, indexPaths: [IndexPath]) {
          let maxRow = indexPaths.map({ $0.section }).max()
          
          guard   maxRow != nil,
              sortedNewsResults.count  <= maxRow! + 3  else { return }
        
        guard !isFetchingMoreNews else {
            if debugPrefetchMode {  print("üôÖ‚Äç‚ôÇÔ∏è –§–ª–∞–≥ –Ω–µ –¥–∞–ª –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–ø—Ä–æ—Å ")    }
            return
        }
          //–≤—ã—Å—Ç–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
        //–ø–æ–∫–∞ —Ñ–ª–∞–≥ –≤–∫–ª—é—á–µ–Ω - –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –≥—Ä—É–∑–∏–º, –∏–Ω–∞—á–µ –≤–æ–≤—Ä–µ–º—è –º–∞—Å—Å–æ–≤–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞ –±—É–¥–µ—Ç –∫–æ–ª–ª–∞–ø—Å –∑–∞–≥—Ä—É–∑–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
          self.isFetchingMoreNews = true

          imageLoadQueue.async {
              self.vkAPI.getNewsList(token: Session.shared.token, userId: Session.shared.userId, nextFrom: self.nextFrom, startTime: nil, version: Session.shared.version) { [weak self] result in
                  guard let self = self else { return }
                  switch result {
                  case .success(let posts):
                      if debugPrefetchMode {  print("üèÅ completion success: \(Date())")   }
                      
                      //—Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å, –ø—Ä–∏–≤–æ–¥–∏–º –∫ —Ñ–æ—Ä–º–∞—Ç—É, —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å–µ–∫—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º –∫ —Ç–µ–∫—É—â–µ–º—É –º–∞—Å—Å–∏–≤—É –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤ TableView
                    if debugPrefetchMode {  print(" ‚úÖ isFetchingMoreNews = \(self.isFetchingMoreNews), –¥–∞—Ç–∞ = \(Date())")  }
                      self.workWithNewsWebQuery(responseNews: posts)
                      //—Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
                      self.isFetchingMoreNews = false
    
                  case .failure(let error):
                      self.isFetchingMoreNews = false
                      print(error)
                  }//switch result
              }// completion
          }// imageLoadQueue.async {
      }//func fetchMoreNews()
      

    /// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—ã—Å–æ—Ç—É —Å—Ç—Ä–æ–∫–∏ tableView –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —è—á–µ–π–∫–∏
    /// - Parameters:
    ///   - tableView: —Ç–∞–±–ª–∏—Ü–∞ –∏–∑ TableViewController
    ///   - indexPath: ¬†—Å—Ç—Ä–æ–∫–∞ indexPath
    func getRowHeight(tableView: UITableView, indexPath: IndexPath) -> CGFloat {
        let rowType = indexPath.row
        switch cellType[rowType] {
        case "Gif":
            let currentNews = self.getCurrentNewsAtIndexSection(indexPath: indexPath)
            let localStruct = currentNews?.newsPart as! StrGif
            if localStruct.newsGif == "" {return 0} else { return 200}
        case "Link":
            let currentNews = self.getCurrentNewsAtIndexSection(indexPath: indexPath)
            let localStruct = currentNews?.newsPart as! StrLink
            if localStruct.url == "" {return 0} else { return UITableView.automaticDimension}
        case "IconUserTimeCell":
            return Constants.iconUserTimeHeight
        //–∫–æ–ª–ª–µ–∫—à–Ω —Å —Ñ–æ—Ç–æ
        case "PhotoCollectionCV":
            let currentNews = self.getCurrentNewsAtIndexSection(indexPath: indexPath)
            let localStruct = currentNews?.newsPart as! StrPhotoCollectionCV
            switch(localStruct.newsImages.count) {
            case 0:
                return 0
            default:
                return Constants.collectionViewInTableViewHeight
//                return UITableView.automaticDimension
              }
              
          default:
              return UITableView.automaticDimension
          }
      }//func getRowHeight
      
    
    /// —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–ª–µ—Å–∏–∫–æ refresh –ø—Ä–∏ –¥–æ–∑–∞–≥—Ä—É–∑–∫–µ —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web
      func addRefreshControl(){
          customRefreshControl.attributedTitle = NSAttributedString(string:"refreshing...")
          customRefreshControl.addTarget(self, action: #selector(refreshTable), for: .valueChanged)
          self.view?.addSubView(view: customRefreshControl)
      }
      
    
    /// —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –±–æ–ª–µ–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
      @objc func refreshTable(){
          
              self.isFetchingMoreNews = true
              self.vkAPI.getNewsList(token: Session.shared.token, userId: Session.shared.userId, nextFrom: nil, startTime: String(self.freshestDateInt + 1), version: Session.shared.version) { [weak self] result in
                     guard let self = self else { return }
                     switch result {
                     case .success(let posts):
                        if posts.items.count > 0 {
                          //—Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å, –ø—Ä–∏–≤–æ–¥–∏–º –∫ —Ñ–æ—Ä–º–∞—Ç—É, —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å–µ–∫—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º –∫ —Ç–µ–∫—É—â–µ–º—É –º–∞—Å—Å–∏–≤—É –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤ TableView
                          self.workWithNewsWebQuery(responseNews: posts)
                        }//if posts.items.count > 0
                     case .failure(let error):
                         print(error)
                     }
                 }
               self.isFetchingMoreNews = false
              self.customRefreshControl.endRefreshing()

      } //@objc func refreshTable(){
}//class GroupPresenterImplementation

extension NewsViewPresenterImplementation {
    
    //MARK: —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è TableViewController —Å —Å–µ–∫—Ü–∏—è–º–∏
    func numberOfRowsInSection(section: Int) -> Int {
        let count = sortedNewsResults[section].items.count
        if count > cellType.count{
            print("–∑–∞–¥–≤–æ–∏–ª–æ—Å—å: count = \(count)")
        }
        return count
    }
    
    func getCurrentNewsAtIndexSection(indexPath: IndexPath) -> NewsWithSectionsAny? {
        return sortedNewsResults[indexPath.section].items[indexPath.row]
    }
    
    func numberOfSections() -> Int {
        return sortedNewsResults.count
    }
    
    func getSectionIndexTitles() -> [String]? {
        return sortedNewsResults.map{$0.title}
    }
    
    //—Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–∞–ª–∏–∑—É–µ—Ç –≤—ã–∑–æ–≤ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    //–ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ "–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é" –≤ —è—á–µ–π–∫–µ 
    func buttonClicked() {
        view?.updateTable()
    }
    
    //—Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–∞–ª–∏–∑—É–µ—Ç –≤—ã–∑–æ–≤ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    //–ø–æc–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–æ—Å—Ç–∞–≤–∞ —Ñ–æ—Ç–æ–∫ –≤ —è—á–µ–π–∫–µ —Å CollectionView
    func imageHeightDefined() {
         view?.updateTable()
    }
}// extension


